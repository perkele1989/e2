var cityScript = EntityScript();

/** Specify the gamestate for a city */
class CityState 
{
    var cityName;
    def CityState(entity)
    {
        this.cityName = game.getCityName();
        this.engineerBuildAction = entity.createBuildAction("engineer");
    }

    var engineerBuildAction;
}

/** Function that creates a state for an entity of this type */
cityScript.setCreateState(fun(entity){
    return CityState(entity);
});

cityScript.setOnHit(fun(entity, instigator, dmg){
    game.addScreenShake(0.5f);
    entity.playSound("damage", 1.0f, 1.0f);
});

/** Function that renders the UI for an entity of this type */
cityScript.setDrawUI(fun(entity, ui){

    ui.gameLabel(entity.scriptState.cityName.string(), 12.0, TA_Begin);

    if(entity.buildMessage.size > 0)
    {
        ui.gameLabel(entity.buildMessage, 12.0, TA_Begin);
    }

    ui.beginStackH("mobH1", 40.0)
    if(entity.isBuilding())
    {
        if(ui.gameGridButton("cancelBuild", "gameUi.cancel", "Cancel", true))
        {
            entity.cancelBuild();
        }
    }
    else 
    {
        var canBuildEngineer = entity.canBuild(entity.scriptState.engineerBuildAction);
        if(ui.gameGridButton("buildEngineer", "gameUi.engineer", "Build Engineer", canBuildEngineer))
        {
            entity.build(entity.scriptState.engineerBuildAction);
        }
    }

    ui.endStackH();
    
});

cityScript;