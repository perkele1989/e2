var mobScript = EntityScript();

/** Specify the state type for a M.O.B */
class MobState 
{
    def MobState(entity)
    {
        this.engineerBuildAction = entity.createBuildAction("engineer");
    }

    var engineerBuildAction;
}

/** Function that creates a state for an entity of this type */
mobScript.setCreateState(fun(entity){
    return MobState(entity);
});

/** Function that renders the UI for an entity of this type */
mobScript.setDrawUI(fun(entity, ui){

    if(entity.buildMessage.size > 0)
    {
        ui.gameLabel(entity.buildMessage, 12.0, TA_Begin);
    }

    ui.beginStackH("mobH1", 40.0)
    if(entity.isBuilding())
    {
        if(ui.gameGridButton("cancelBuild", "gameUi.cancel", "Cancel", true))
        {
            entity.cancelBuild();
        }
    }
    else 
    {
        var canBuildEngineer = entity.canBuild(entity.scriptState.engineerBuildAction);
        if(ui.gameGridButton("buildEngineer", "gameUi.engineer", "Build Engineer", canBuildEngineer))
        {
            entity.build(entity.scriptState.engineerBuildAction);
        }
    }

    ui.endStackH();
    
});

mobScript;